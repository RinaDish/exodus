name: CI
on:
  push:
    branches: 
      - 'test-ci'
jobs:

  servers-up:
    name: 'Setup Env and Run Tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch
          git checkout test-ci
          git pull &
      - run: |
          cd ./backend
          npm ci
          sudo npx tsc && node out/src/app.js &
      - run: |
          cd ./frontend
          npm ci
          npm run dev &
      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          config: 'baseUrl=http://localhost:5000'
          wait-on: 'http://localhost:5000, http://localhost:8081/logout'
          wait-on-timeout: 120
          browser: chrome
          headless: true
          working-directory: e2e
          group: 'UI - Chrome'
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: 'UI Tests - Chrome - Mobile'
        uses: cypress-io/github-action@v2
        with:
          config: 'viewportWidth=375,viewportHeight=812,baseUrl=http://localhost:5000'
          wait-on: 'http://localhost:5000, http://localhost:8081/logout'
          wait-on-timeout: 120
          working-directory: e2e
          browser: chrome
          headless: true
          record: true
          group: 'UI - Chrome - Mobile'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

  # deploy:
  #   name: Deploy to gh-pages
  #   needs: servers-up
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: |
  #        cd ./frontend
  #        git fetch
  #        git checkout test-ci
  #        git pull
  #        npm ci
  #        npm run build
  #        git config --global user.email "exodus-ci@exodus.com"
  #        git config --global user.name "Exodus Ci"
  #        npm run deploy

      #   run: ssh test-ci 'cd exodus/frontend && git fetch && git checkout test-ci && git checkout package-lock.json && git pull && npm i && npm run build && npm run deploy'

  # update-server:
  #   name: Update the Server
  #   runs-on: ubuntu-latest
  #   needs: servers-up
  #   steps:
  #     - name: Configure SSH
  #       shell: bash
  #       run: |
  #         mkdir -p ~/.ssh/
  #         echo "$SSH_KEY" > ~/.ssh/test-ci.key
  #         chmod 600 ~/.ssh/test-ci.key
  #         cat >>~/.ssh/config <<END
  #         Host test-ci
  #           HostName $SSH_HOST
  #           User $SSH_USER
  #           IdentityFile ~/.ssh/test-ci.key
  #           StrictHostKeyChecking no
  #         END
  #       env:
  #         SSH_USER: ${{ secrets.SERVER_USERNAME }}
  #         SSH_KEY: ${{ secrets.SERVER_KEY }}
  #         SSH_HOST: ${{ secrets.SERVER_HOST }}

  #     - name: Restart Forever Server
  #       shell: bash
  #       run: ssh test-ci 'cd exodus/backend && git fetch && git checkout test-ci && git pull && npm ci && npm run build && sudo forever stopall && sudo forever start out/app.js'